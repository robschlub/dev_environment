// Retrieve color and shade from palette
@function color_from_palette($palette, $color, $shade) {
  @return map-get(map-get($palette, $color), $shade);
}

// Add contrasts to a palette and return a new palette with contrasts added
@function add-contrasts-to-palette($palette, $contrast_map) {
  $new-palette: ();

  @each $hue, $hue-map in $palette {
    $map: ();
    $map: map-merge(
      $hue-map,
      (
        'lower': color_from_palette($palette, $hue, map-get($contrast_map, 'lower')),
        'low': color_from_palette($palette, $hue, map-get($contrast_map, 'low')),
        'high': color_from_palette($palette, $hue, map-get($contrast_map, 'high')),
        'higher': color_from_palette($palette, $hue, map-get($contrast_map, 'higher')),
      ),
    );
    $new-palette: map-merge($new-palette, ($hue: $map));
  }

  @return $new-palette;
}

// Global variables that are needed for below functions:
//  - $_color_theme:   The map of all colors in a theme
//  - $_color_palette:        The color palette to get the colors from

// Get the color and shade from a globally defined palette
@function palette-color($color, $shade) {
  @return map-get(map-get($_color_palette, $color), $shade);
}

// Helper function to retrive either the diagram, lesson or main map from
// theme-colors
@function hue-map($fromOrName, $name: '') {
  $map: ();

  @if $fromOrName == diagram {
    $map: map-get(map-get($_color_theme, diagram), $name);
  }

  @else if $fromOrName == lesson {
    $map: map-get(map-get($_color_theme, lesson), $name);
  }

  @else {
    $map: map-get($_color_theme, 'hue' + $fromOrName);
  }

  @return $map;
}

// Retrieve color from theme-colors
@function color($fromOrName, $name: '') {
  $map: hue-map($fromOrName, $name);
  $col: map-get($map, color);
  $shade: map-get($map, shade);

  @return palette-color($col, $shade);
}

// Retrieve hue only from theme-colors
@function hue($fromOrName, $name: '') {
  $map: hue-map($fromOrName, $name);
  $col: map-get($map, color);

  @return $col;
}

// Retrieve hue and custom shade from theme-colors
@function hue-shade($fromOrName, $nameOrShade, $shadeOnly: '') {
  $map: hue-map($fromOrName, $nameOrShade);
  $col: map-get($map, color);
  $shade: $shadeOnly;

  @if $shade == '' {
    $shade: $nameOrShade;
  }

  @return palette-color($col, $shade);
}
